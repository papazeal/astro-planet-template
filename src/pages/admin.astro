---
import Layout from "../layouts/Layout.astro";
import PlanetCMS from "../components/CMS/PlanetCMS.svelte";
import { SignOutButton } from "@clerk/astro/components";
import { writeToR2 } from "../libs/s3";
import { getData } from "../libs/util";
import sharp from "sharp";

import modelJSON from "/src/model.json" assert { type: "json" };
const model = modelJSON.groups;
let data = await getData();

const user = await Astro.locals.currentUser();

let processBase64 = async (obj) => {
  const max_width = 1200;
  const searchText = "data:image";
  for (let key in obj) {
    let value = obj[key];

    if (typeof value === "string" && value.includes(searchText)) {
      console.log("found: " + searchText);

      // process image upload
      let random = (Math.random() + 1).toString(36).substring(7);
      let fileName = random + ".webp";
      let imgData = obj[key].split(";base64,").pop();
      const imageBuffer = Buffer.from(imgData, "base64");
      const metadata = await sharp(imageBuffer).metadata();
      let webpImageBuffer;

      if (metadata.width > max_width) {
        webpImageBuffer = await sharp(imageBuffer)
          .resize({ width: max_width })
          .webp({ quality: 80, lossless: true })
          .toBuffer();
      } else {
        webpImageBuffer = await sharp(imageBuffer)
          .webp({ quality: 80, lossless: true })
          .toBuffer();
      }

      obj[key] = await writeToR2(fileName, obj.type, webpImageBuffer);
      obj.w = metadata.width;
      obj.h = metadata.height;
    }

    if (typeof value === "object") {
      await processBase64(value);
    }
  }
};

if (Astro.request.method === "POST") {
  let processedFormObject = await Astro.request.json();

  try {
    await processBase64(processedFormObject);
    await writeToR2(
      "data.json",
      "application/json",
      JSON.stringify(processedFormObject, null, "\t"),
      false
    );
  } catch (error) {
    return error;
  }

  return Response.json({
    message: "Data saved successfully",
    formData: processedFormObject,
  });
}
---

<Layout>
  <div
    class="shadow-lg bg-white p-4 px-8 md:flex top-0 left-0 w-full z-50 !hidden"
  >
    <div class="flex gap-4">
      <div>{user?.emailAddresses[0].emailAddress}</div>
      <a href={Astro.url.origin}>{Astro.url.origin}</a>
    </div>
    <div class="ml-auto flex gap-4 items-center mt-4 md:mt-0">
      <SignOutButton asChild={true}
        ><button
          class="border border-slate-500 px-4 py-1 rounded cursor-pointer"
          >Sign Out</button
        ></SignOutButton
      >
      <input
        onclick="submit(e)"
        type="submit"
        class="bg-slate-800 text-white px-6 py-1 rounded cursor-pointer"
        value="Save Changes"
      />
    </div>
  </div>

  <PlanetCMS
    client:load
    model={model}
    data={data}
    user={user?.emailAddresses[0].emailAddress}
    website={Astro.url.origin}
  />
</Layout>
