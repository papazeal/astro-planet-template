---
import Layout from "../layouts/Layout.astro";
import PlanetCMS from "../components/CMS/PlanetCMS.svelte";
import { SignOutButton } from "@clerk/astro/components";

import { commitFiles } from "../libs/github";
import { writeToFile } from "../libs/file";

import sharp from "sharp";

import data from "/content/data.json" assert { type: "json" };
import modelJSON from "/content/model.json" assert { type: "json" };
const model = modelJSON.groups;

const user = await Astro.locals.currentUser();

let processBase64 = async (obj) => {
  // if (typeof obj === "object")
  let searchText = "data:image";
  for (let key in obj) {
    let value = obj[key];

    if (typeof value === "string" && value.includes(searchText)) {
      console.log("found: " + searchText);

      // process image upload
      let random = (Math.random() + 1).toString(36).substring(7);
      let dir = "public/images/";
      let fileName = random + ".webp";
      let imgData = obj[key].split(";base64,").pop();
      const imageBuffer = Buffer.from(imgData, "base64");
      const webpImageBuffer = await sharp(imageBuffer)
        .webp({ quality: 80 })
        .toBuffer();
      writeToFile(fileName, dir, webpImageBuffer);
      console.log("file", dir + fileName);
      obj[key] = dir + fileName;
    }

    if (typeof value === "object") {
      await processBase64(value);
    }
  }
};

if (Astro.request.method === "POST") {
  let processedFormObject = await Astro.request.json();
  // console.log("formData", processedFormObject);

  await processBase64(processedFormObject);

  if (import.meta.env.MODE === "production") {
    await commitFiles(JSON.stringify(processedFormObject, null, "\t"));
  } else {
    console.log("save file to local folder");
    writeToFile(
      "data.json",
      "content",
      JSON.stringify(processedFormObject, null, "\t")
    );
  }

  return Response.json({ message: "Data saved successfully" });
}

const submit = async (e) => {
  e.preventDefault();
};
---

<Layout>
  <div
    class="shadow-lg bg-white p-4 px-8 md:flex top-0 left-0 w-full z-50 !hidden"
  >
    <div class="flex gap-4">
      <div>{user?.emailAddresses[0].emailAddress}</div>
      <a href={Astro.url.origin}>{Astro.url.origin}</a>
    </div>
    <div class="ml-auto flex gap-4 items-center mt-4 md:mt-0">
      <SignOutButton asChild={true}
        ><button
          class="border border-slate-500 px-4 py-1 rounded cursor-pointer"
          >Sign Out</button
        ></SignOutButton
      >
      <input
        onclick="submit(e)"
        type="submit"
        class="bg-slate-800 text-white px-6 py-1 rounded cursor-pointer"
        value="Save Changes"
      />
    </div>
  </div>

  <PlanetCMS
    client:load
    model={model}
    data={data}
    user={user?.emailAddresses[0].emailAddress}
    website={Astro.url.origin}
  />
</Layout>
